p=0.5
data <- gen_data(N=10000, R=1)[[1]]
ATE(data=data)
ATE.lm(data=data)
stATE(data=data, probs=p, strat.var="x1")
stATE.lm(data=data, prob=p, strat.var="x1")
coeftest(lm(Y ~ treat * cut(x1, p), data=data), vcov=sandwich) # double check
stATE(data=data, probs=p, strat.var="x2")
stATE.lm(data=data, prob=p, strat.var="x2")
stATE(data=data, probs=p, strat.var="x3")
stATE.lm(data=data, prob=p, strat.var="x3")
# Repeated sampling -----
R=10000
p=0.5
data <- gen_data(R=R, N=1000)
# In-sample true ATE
trueATEfs <- sapply(data, function(data){mean(data$te)}) # within experiment
trueATEpop <- 1 # population
# Neyman estimators
ests <- t(sapply(data, ATE, long=TRUE))
mean(ests[,"sd.ATE"]) # average estimated sampling variation in ATE
sd(ests[,"ATE"]) # actual sampling variation in ATE
mean(ests[,"ci_low"] < trueATEpop & ests[,"ci_high"] > trueATEpop) # coverage
mean(ests[,"ci_low"] < trueATEfs & ests[,"ci_high"] > trueATEfs)
ests <- t(sapply(data, stATE2, probs=p, strat.var="x1", long=TRUE))
mean(ests[,"sd.ATE"]) - sd(ests[,"ATE"]) # should be zero, negative bad
mean(ests[,"ci_low"] < trueATEpop & ests[,"ci_high"] > trueATEpop) # coverage
mean(ests[,"ci_low"] < trueATEfs & ests[,"ci_high"] > trueATEfs) # coverage
# Repeated sampling -----
R=1000
p=0.5
data <- gen_data(R=R, N=10000)
# In-sample true ATE
trueATEfs <- sapply(data, function(data){mean(data$te)}) # within experiment
trueATEpop <- 1 # population
# Neyman estimators
ests <- t(sapply(data, ATE, long=TRUE))
mean(ests[,"sd.ATE"]) # average estimated sampling variation in ATE
sd(ests[,"ATE"]) # actual sampling variation in ATE
mean(ests[,"ci_low"] < trueATEpop & ests[,"ci_high"] > trueATEpop) # coverage
mean(ests[,"ci_low"] < trueATEfs & ests[,"ci_high"] > trueATEfs)
ests <- t(sapply(data, stATE2, probs=p, strat.var="x1", long=TRUE))
mean(ests[,"sd.ATE"]) - sd(ests[,"ATE"]) # should be zero, negative bad
mean(ests[,"ci_low"] < trueATEpop & ests[,"ci_high"] > trueATEpop) # coverage
mean(ests[,"ci_low"] < trueATEfs & ests[,"ci_high"] > trueATEfs) # coverage
N
Summer * 3
Months <- c("January", "February", "March", "April", "May", "June",
"July", "August", "September", "October", "November", "December")
Months
Summer <- 6:9
Summer
Months[Summer]
Summer <- 6:9
Summer
Months[Summer]
Summer * 3
Months[Summer * 3]
Months[Summer]
mean(Summer)
Months[mean(Summer)]
mean(Summer)
Months[mean(Summer)]
Months[floor(mean(Summer))]
Months[ceiling(mean(Summer))]
Months[floor(mean(Summer))]
Months[ceiling(mean(Summer))]
# Workspace setup for next exercises -- same as in Section 2.5, same as in the main code for the chapter.
store.num <- factor(c(3, 14, 21, 32, 54))   # store id
store.rev <- c(543, 654, 345, 678, 234)     # store revenue, $1000
store.visits <- c(45, 78, 32, 56, 34)       # visits, 1000s
store.manager <- c("Annie", "Bert", "Carla", "Dave", "Ella")
(store.df <- data.frame(store.num, store.rev, store.visits,
store.manager, stringsAsFactors=F)) # F = FALSE
# Exercise solution
store.df[2 , 3]
# Workspace setup -- same as in Section 2.5, same as in the main code for the chapter.
store.num <- factor(c(3, 14, 21, 32, 54))   # store id
store.rev <- c(543, 654, 345, 678, 234)     # store revenue, $1000
store.visits <- c(45, 78, 32, 56, 34)       # visits, 1000s
store.manager <- c("Annie", "Bert", "Carla", "Dave", "Ella")
(store.df <- data.frame(store.num, store.rev, store.visits,
store.manager, stringsAsFactors=F)) # F = FALSE
# Exercise solution
store.df[2 , 3]
# Workspace setup -- same as in Section 2.5, same as in the main code for the chapter.
store.num <- factor(c(3, 14, 21, 32, 54))   # store id
store.rev <- c(543, 654, 345, 678, 234)     # store revenue, $1000
store.visits <- c(45, 78, 32, 56, 34)       # visits, 1000s
store.manager <- c("Annie", "Bert", "Carla", "Dave", "Ella")
(store.df <- data.frame(store.num, store.rev, store.visits,
store.manager, stringsAsFactors=F)) # F = FALSE
# Exercise solution
store.df[2 , 3]
store.df[2, ]
store.df[2, ]
pi*c(4.0, 4.5, 5.0, 6.0)^2
PieArea <- function(r) {
return(pi * r^2)
}
PieArea(c(4.0, 4.5, 5.0, 6.0))
mean(Summer)
Months[mean(Summer)]
Months[floor(mean(Summer))]
Months[ceiling(mean(Summer))]
# Workspace setup -- same as in Section 2.5, same as in the main code for the chapter.
store.num <- factor(c(3, 14, 21, 32, 54))   # store id
store.rev <- c(543, 654, 345, 678, 234)     # store revenue, $1000
store.visits <- c(45, 78, 32, 56, 34)       # visits, 1000s
store.manager <- c("Annie", "Bert", "Carla", "Dave", "Ella")
(store.df <- data.frame(store.num, store.rev, store.visits,
store.manager, stringsAsFactors=F)) # F = FALSE
# Exercise solution
store.df[2 , 3]
store.df[2, ]
pi*c(4.0, 4.5, 5.0, 6.0)^2
#hotel.df <- read.csv("hotelsat-data.csv")
hotel.df <- read.csv("https://goo.gl/oaWKgt")
summary(hotel.df)
library(psych)
describe(hotel.df)
library(car)
scatterplotMatrix(hotel.df[ , 1:9])   # first set of Sat variables
scatterplotMatrix(hotel.df[ , 10:18]) # second set of Sat variables
scatterplotMatrix(hotel.df[ , 19:25]) # spending and other variables
# transform: distanceTraveled, nightsStayed, avgFoodSpendPerNight
par(mfrow=c(1, 2))
hist(hotel.df$distanceTraveled)
hist(log(hotel.df$distanceTraveled))
hist(hotel.df$nightsStayed)
hist(log(hotel.df$nightsStayed))
hist(hotel.df$avgFoodSpendPerNight)
hist(log(hotel.df$avgFoodSpendPerNight))
hotel.df.tr <- hotel.df
hotel.df.tr$distanceTraveled     <- log(hotel.df$distanceTraveled)
hotel.df.tr$nightsStayed         <- log(hotel.df$nightsStayed)
hotel.df.tr$avgFoodSpendPerNight <- log(hotel.df$avgFoodSpendPerNight + 1)
par(mfrow=c(1, 1))
scatterplotMatrix(hotel.df.tr[ , 19:25])
library(psych)
describe(hotel.df)
library(car)
scatterplotMatrix(hotel.df[ , 1:9])
library(psych)
describe(hotel.df)
library(car)
scatterplotMatrix(hotel.df[ , 1:9])
par(mfrow=c(1, 2))
hist(hotel.df$distanceTraveled)
hist(log(hotel.df$distanceTraveled))
hist(hotel.df$nightsStayed)
hist(log(hotel.df$nightsStayed))
hist(hotel.df$avgFoodSpendPerNight)
hist(log(hotel.df$avgFoodSpendPerNight))
hotel.df.tr <- hotel.df
hotel.df.tr$distanceTraveled     <- log(hotel.df$distanceTraveled)
hotel.df.tr$nightsStayed         <- log(hotel.df$nightsStayed)
hotel.df.tr$avgFoodSpendPerNight <- log(hotel.df$avgFoodSpendPerNight + 1)
par(mfrow=c(1, 1))
scatterplotMatrix(hotel.df.tr[ , 19:25])
par(mfrow=c(1, 1))
scatterplotMatrix(hotel.df.tr[ , 19:25])
par(mfrow=c(1, 1))
scatterplotMatrix(hotel.df.tr[ , 19:25])
library(car)
scatterplotMatrix(hotel.df[ , 1:9])
scatterplotMatrix(hotel.df[ , 10:18])
scatterplotMatrix(hotel.df[ , 19:25]) # spending and other variables
library(corrplot)
corrplot(cor(hotel.df.tr[ , c(-21, -25)]))
cor(hotel.df[ , 1:3])
library(psych)
polychoric(with(hotel.df, cbind(satCleanRoom, satCleanBath, satCleanCommon)))
hotel.perks.lm  <- lm(satOverall ~ satPerks, data=hotel.df.tr)
summary(hotel.perks.lm)
hotel.perks.lm2 <- lm(satOverall ~ satPerks + satCity + satFrontStaff, data=hotel.df.tr)
summary(hotel.perks.lm2)
hotel.rec.lm <- lm(satRecognition ~ satCleanRoom + satFrontStaff + satPoints+ satPerks,
data=subset(hotel.df.tr, eliteStatus %in% c("Gold", "Platinum")))
summary(hotel.rec.lm)
summary(hotel.rec.lm)
hotel.food.lm <- lm(avgFoodSpendPerNight ~ eliteStatus + satDiningPrice, data=hotel.df.tr)
summary(hotel.food.lm)
hotel.food.lm2 <- lm(avgFoodSpendPerNight ~ satDiningPrice, data=hotel.df.tr)
summary(hotel.food.lm2)
hotel.food.lm.bynights <- lm(avgFoodSpendPerNight ~ nightsStayed, data=hotel.df.tr)
plot(jitter(exp(hotel.df.tr$nightsStayed)), jitter(exp(fitted(hotel.food.lm.bynights))),
xlab="Nights stayed", ylab="Mean Food Spend per Night ($)")
hotel.food.lm.bynights.pl <- lm(avgFoodSpendPerNight ~ nightsStayed,
data=subset(hotel.df.tr, eliteStatus=="Platinum"))
summary(hotel.food.lm.bynights)
summary(hotel.food.lm.bynights.pl)
plot(jitter(exp(hotel.df.tr$nightsStayed)),
jitter(exp(fitted(hotel.food.lm.bynights))),
col="red",
xlab="Nights stayed", ylab="Mean Food Spend per Night ($)")
points(jitter(exp(hotel.df.tr$nightsStayed[hotel.df.tr$eliteStatus=="Platinum"])),
jitter(exp(fitted(hotel.food.lm.bynights.pl))),
col="blue")
legend("topleft", legend=c("All visitors", "Platinum members"),
col=c("red", "blue"), pch=1)
library(MCMCpack)
hotel.rec.lm.b <- MCMCregress(satRecognition ~ satCleanRoom + satFrontStaff + satPoints+ satPerks, data=subset(hotel.df.tr, eliteStatus %in% c("Gold", "Platinum")))
summary(hotel.rec.lm.b)
summary(hotel.rec.lm)
hotel.rec.compare <- data.frame(classical = coef(hotel.rec.lm)[-1],
bayesian  = summary(hotel.rec.lm.b)$statistics[c(-1, -6), 1])
hotel.rec.compare
plot(bayesian ~ classical, data=hotel.rec.compare)
abline(0,1)
cor(hotel.rec.compare$classical, hotel.rec.compare$bayesian)
str(hotel.df)
library(dplyr)
library(tidyr)
library(ggplot2)
library(grf)
treat <- d$email[1:100]
library(dplyr)
library(tidyr)
library(ggplot2)
library(grf)
d <- read.csv("test_data.csv")
hist(d$last_purch,
xlab="Days Since Last Purchase", ylab="Customers",
main="Histogram of Days Since Last Purchase")
d$email <- d$group !="ctrl"
d %>% filter(email==TRUE) %>%
ggplot(aes(y=purch, x=group)) +
geom_dotplot(binaxis='y', stackdir='center',
stackratio=0.1, dotsize=0.1) +
ylab("30-Day Purchases ($)") + xlab("") +
scale_y_log10()
treat <- d$email[1:100]
response <- d$purch[1:100]
base_names <- c("last_purch", "past_purch", "visits", "chard", "sav_blanc", "syrah", "cab")
baseline <- d[1:100, d[,base_names]]
base_names
treat <- d$email[1:100]
response <- d$purch[1:100]
baseline <- d[1:100, d[,c("last_purch", "past_purch", "visits", "chard", "sav_blanc", "syrah", "cab")]]
treat <- d$email[1:100]
response <- d$purch[1:100]
baseline <- d[1:100, ,c("last_purch", "past_purch", "visits", "chard", "sav_blanc", "syrah", "cab")]
treat <- d$email[1:100]
response <- d$purch[1:100]
baseline <- d[1:100, c("last_purch", "past_purch", "visits", "chard", "sav_blanc", "syrah", "cab")]
cf <- causal_forest(baseline, response, treat)
print(cf)
treat <- d$email[1:1000]
response <- d$purch[1:1000]
baseline <- d[1:1000, c("last_purch", "past_purch", "visits", "chard", "sav_blanc", "syrah", "cab")]
cf <- causal_forest(baseline, response, treat)
print(cf)
summary(predict(cf))
?predict.causal_forest
hist(predict(cf))
predict(cf)
predict(cf)$predictions
hist(predict(cf)$predictions)
hist(predict(cf)$predictions,
main="Histogram of Purchase Lift"
xlab="Purchase Lift for Email", ylab="Customers")
hist(predict(cf)$predictions,
main="Histogram of Purchase Lift",
xlab="Purchase Lift for Email", ylab="Customers")
average_treatment_effect(cf, method="AIPW")
average_treatment_effect(cf, method="AIPW")
trans_gray <- rgb(0.1, 0.1, 0.1, alpha=0.1)
plot(d$past_purch, predict(cf)$predictions,
cex=0.5, col=trans_gray,
xlab="Past Purchase Amount ($)", ylab="Predicted Treatment Effect ($)")
hist(predict(cf)$predictions,
main="Histogram of Purchase Lift",
xlab="Purchase Lift for Email", ylab="Customers")
trans_gray <- rgb(0.1, 0.1, 0.1, alpha=0.1)
plot(d$past_purch[1:1000], predict(cf)$predictions,
cex=0.5, col=trans_gray,
xlab="Past Purchase Amount ($)", ylab="Predicted Treatment Effect ($)")
trans_gray <- rgb(0.1, 0.1, 0.1, alpha=0.1)
plot(d$last_purch[1:1000], predict(cf)$predictions,
cex=0.5, col=trans_gray,
xlab="Past Purchase Amount ($)", ylab="Predicted Treatment Effect ($)")
m2 <- lm(purch ~ email + (last_purch < 60), data=d)
summary(m2)$coef
m2 <- lm(purch ~ email + (last_purch < 60), data=d)
summary(m2)$coef
m2 <- lm(purch ~ email + (last_purch < 60), data=d)
summary(m2)$coef
predict.causal_forest
predict.gcf
library(gcf)
predict.grf
library(grf)
?predict.grf
?predict.causal_forest
new_cust <- data.frame(chard=38.12, sav_blanc=0, syrah=0, cab=0,
past_purch=38.12, last_purch=19, visits=3)
predict(cf, new_cust)
new_cust <- data.frame(chard=38.12, sav_blanc=0, syrah=0, cab=0,
past_purch=38.12, last_purch=19, visits=3)
predict(cf, new_cust, estimate.variance = TRUE)
sqrt(24)
hist(predict(cf)$predictions,
main="Histogram of Purchase Lift",
xlab="Purchase Lift for Email", ylab="Customers")
average_treatment_effect(cf, method="AIPW")
average_treatment_effect(cf, method="AIPW")
trans_gray <- rgb(0.1, 0.1, 0.1, alpha=0.1)
plot(d$past_purch[1:1000], predict(cf)$predictions,
cex=0.5, col=trans_gray,
xlab="Past Purchase Amount ($)", ylab="Predicted Treatment Effect ($)")
trans_gray <- rgb(0.1, 0.1, 0.1, alpha=0.1)
plot(d$last_purch[1:1000], predict(cf)$predictions,
cex=0.5, col=trans_gray,
xlab="Days Since Last Purchase", ylab="Predicted Treatment Effect ($)")
d <- read.csv("test_data.csv")
str(d)
hist(d$past_purch)
summary(d$past_purch)
sum(d$past_purch > 500)
sum(d$past_purch > 1000)
d <- read.csv("test_data.csv")
d$email <- d$group !="ctrl"
xtabs(purch ~ email, data=d)
t.test(purch ~ email, data=d)
d <- read.csv("test_data.csv")
d$email <- d$group !="ctrl"
xtabs(~ purch + email, data=d)
t.test(purch ~ email, data=d)
d <- read.csv("test_data.csv")
d_big <- d[d$purch > 1000, ]
aggregate(cbind(open, click, purch) ~ group + (last_purch < 60),
data=d_big, FUN=mean)
d <- read.csv("test_data.csv")
d_big <- d[d$purch > 1000, ]
aggregate(cbind(open, click, purch) ~ group,
data=d_big, FUN=mean)
d <- read.csv("test_data.csv")
d_big <- d[d$past_purch > 1000, ]
aggregate(cbind(open, click, purch) ~ group,
data=d_big, FUN=mean)
d <- read.csv("test_data.csv")
d$email <- d$group != "ctrl"
d_big <- d[d$past_purch > 1000, ]
aggregate(cbind(open, click, purch) ~ group,
data=d_big, FUN=mean)
t.test(purch ~ email, data=d_big[]
d$email <- d$group != "ctrl"
t.test(purch ~ email, data=d_big)
d$email <- d$group != "ctrl"
t.test(purch ~ email, data=d_big)
d$email <- d$group != "ctrl"
summary(lm(purch ~ email, data=d_big))
d$email <- d$group != "ctrl"
summary(lm(purch ~ email, data=d_big))
t.test(purch ~ email, data=d_big)
?t.test
d$email <- d$group != "ctrl"
summary(lm(purch ~ email, data=d_big))
t.test(purch ~ email, data=d_big, var.equal)
d$email <- d$group != "ctrl"
summary(lm(purch ~ email, data=d_big))
t.test(purch ~ email, data=d_big, var.equal=TRUE)
prop.test(purch ~ email, data=d_big[d_big$group != "ctrl"])
prop.test(purch ~ group, data=d_big[d_big$group != "ctrl"])
glm(email ~ group, data=d_big[d_big$group != "ctrl"])
glm(email ~ group, data=d_big[d_big$group != "ctrl"])
glm(email ~ group, data=d_big[d_big$group != "ctrl",])
#prop.test(xtab(~ email + group, data=d_big[d_big$group != "ctrl",]))
summary(glm(email ~ group, data=d_big[d_big$group != "ctrl",]))
#prop.test(xtab(~ email + group, data=d_big[d_big$group != "ctrl",]))
summary(glm(email ~ group, data=d_big[d_big$group != "ctrl",]))
prop.test(xtab(~ email + group, data=d_big[d_big$group != "ctrl",]))
summary(glm(email ~ group, data=d_big[d_big$group != "ctrl",]))
prop.test(xtabs(~ email + group, data=d_big[d_big$group != "ctrl",]))
summary(glm(email ~ group, data=d_big[d_big$group != "ctrl",]))
prop.test(xtabs(~ group +  click, data=d_big[d_big$group != "ctrl",])[,2:1])
str(d_big)
xtabs(~ group + click, data=d_big[d_big$group != "ctrl",])
summary(glm(email ~ group, data=d_big[d_big$group != "ctrl",]))
prop.test(xtabs(~ group + click, data=d_big[d_big$group != "ctrl",])[2:3,2:1])
summary(lm(email ~ group, data=d_big[d_big$group != "ctrl",]))
prop.test(xtabs(~ group + click, data=d_big[d_big$group != "ctrl",])[2:3,2:1])
?prop.test
d_big$email <- d_big$group != "ctrl"
summary(lm(purch ~ email, data=d_big))
# t.test(purch ~ email, data=d_big, var.equal=TRUE) # equivalent
d_big$email <- d_big$group != "ctrl"
summary(lm(purch ~ email, data=d_big))
t.test(purch ~ email, data=d_big, var.equal=TRUE) # equivalent
d_big$email <- d_big$group != "ctrl"
summary(lm(purch ~ email, data=d_big))
# t.test(purch ~ email, data=d_big, var.equal=TRUE) # equivalent
d$email <- d$group != "ctrl"
summary(lm(purch ~ email + (d_big$last_visit > 60), data=d_big))
d$email <- d$group != "ctrl"
summary(lm(purch ~ email + (last_visit > 60), data=d_big))
d$email <- d$group != "ctrl"
summary(lm(purch ~ email + (last_purch > 60), data=d_big))
d$email <- d$group != "ctrl"
summary(lm(purch ~ email, data=d_big))$coef
summary(lm(purch ~ email + (last_purch > 60), data=d_big))$coef
d$email <- d$group != "ctrl"
summary(lm(purch ~ email, data=d_big))$coef
summary(lm(purch ~ email + (past_purch > 2000), data=d_big))$coef
summary(d$past_purch)
summary(d_big$past_purch)
d$email <- d$group != "ctrl"
summary(lm(purch ~ email, data=d_big))$coef
summary(lm(purch ~ email + (past_purch > 1500), data=d_big))$coef
d$email <- d$group != "ctrl"
summary(lm(purch ~ email, data=d_big))$coef
summary(lm(purch ~ email + (last_purch > 60), data=d_big))$coef
str(d)
d$email <- d$group != "ctrl"
summary(lm(purch ~ email, data=d_big))$coef
summary(lm(purch ~ email + (last_purch > 60) + (visits > 5), data=d_big))$coef
summary(d_big$visits)
d$email <- d$group != "ctrl"
summary(lm(purch ~ email, data=d_big))$coef
summary(lm(purch ~ email + (last_purch > 60) + (visits > 10), data=d_big))$coef
summary(d$visits == 0)
xtabs(~ clicks + email, data=d[d$visit])
xtabs(~ clicks + email, data=d[d$visits == 0])
xtabs(~ clicks + email, data=d[d$visits == 0,])
xtabs(~ click + email, data=d[d$visits == 0,])
xtabs(~ group, data=d[d$visits == 0,])
sum(d$visits == 0)
xtabs(~ group, data=d[d$visits == 0,])
xtabs(~ group + (last_purch > 60), data=d_big)
xtabs(~ group)
xtabs(~ group, data=d_big)
xtabs(~ group + (last_purch > 60), data=d_big)
xtabs(~ group, data=d)
xtabs(~ group + (last_purch > 60), data=d_big)
xtabs(~ group, data=d)
d$email <- d$group != "ctrl"
summary(lm(purch ~ email, data=d_big))$coef
summary(lm(purch ~ email + (last_purch > 60), data=d_big))$coef
summary(lm(purch ~ email + (last_purch > 60), data=d_big))$coef
?contrasts
d$strata <- (last_purch > 60)
d$strata <- (d$last_purch > 60)
contrasts(d$strata) <- contr.sum()
d$strata <- (d$last_purch > 60)
contrasts(d$strata) <- contr.sum(2)  # effects coding
contrasts(d$strata)
summary(lm(purch ~ email*(last_purch > 60), data=d_big))$coef
d$email <- d$group != "ctrl"
summary(lm(purch ~ email, data=d_big))$coef
summary(lm(purch ~ email + (last_purch > 60), data=d_big))$coef
summary(lm(purch ~ email + (last_purch < 60) + (past_purch > 50), data=d_big))$coef
summary(lm(purch ~ email + (last_purch < 60) + (past_purch > 50), data=d_big))$coef
summary(lm(purch ~ email + (last_purch < 60) + (past_purch > 50), data=d_big))$coef
summary(lm(purch ~ email + (last_purch < 60) + (past_purch > 50), data=d_big))$coef
d <- read.csv("test_data.csv")
d_big <- d[d$past_purch > 1000, ]
aggregate(cbind(open, click, purch) ~ group,
data=d_big, FUN=mean)
d_big$email <- d_big$group != "ctrl"
summary(lm(purch ~ email, data=d_big))
# t.test(purch ~ email, data=d_big, var.equal=TRUE) # equivalent
summary(glm(email ~ group, data=d_big[d_big$group != "ctrl",]))
# prop.test(xtabs(~ group + click, data=d_big[d_big$group != "ctrl",])[2:3,2:1])
d$email <- d$group != "ctrl"
summary(lm(purch ~ email, data=d_big))$coef
summary(lm(purch ~ email + (last_purch < 60) + (past_purch > 50), data=d_big))$coef
summary(lm(purch ~ email + (last_purch < 60) + (past_purch > 50), data=d_big))$coef
summary(lm(purch ~ email + (last_purch < 60) + (past_purch > 50), data=d_big))$coef
summary(lm(purch ~ email + (last_purch < 60) + (past_purch > 50), data=d_big))$coef
lm(purch ~ email + (last_purch < 60) + (past_purch > 50), data=d_big)
summary(lm(purch ~ email + (last_purch < 60) + (past_purch > 50), data=d_big))
summary(lm(purch ~ email + (last_purch < 60) + (past_purch > 50), data=d_big))$coef
summary(lm(purch ~ email + (last_purch > 60), data=d_big))$coef
xtabs(~ group, data=d)
xtabs(~ group, data=d)
xtabs(~ group + (last_purch > 60), data=d_big)
?t.test
t.test(..., paired=TRUE)
library(rstan)
lr <- read.csv("paper_examples/display_LewisRao2015Retail.csv")
lr <- read.csv("display_LewisRao2015Retail.csv")
getwd()
lr <- read.csv("display_LewisRao2015Retail.csv")
setwd("~/repos/ab_test/code")
library(rstan)
```{r setup, include=FALSE}
library(rstan)
setwd("~/repos/ab_test/code")
lr <- read.csv("display_LewisRao2015Retail.csv")
getwd()
library(rstan)
setwd("~/repos/ab_test/code")
lr <- read.csv("display_LewisRao2015Retail.csv")
library(rstan)
setwd("~/repos/ab_test/code")
setwd("~/")
setwd("~/repos/ab_test/code")
library(rstan)
lr <- read.csv("display_LewisRao2015Retail.csv")
# data taken from tables 1 and 2 of Lewis and Rao (2015)
c <- c(1:3,5:6) # include only advertiser 1 and eliminate exp 4
d1 <- list(nexpt=length(c), nobs=lr$n1[c], ybar=lr$m[c], s=lr$s[c])
m1 <- stan(file="~/repos/profit_max_experiments/paper_examples/stan_files/norm_arm_11.stan", data=d1, seed=20030601,
iter=10000)
lr <- read.csv("display_LewisRao2015Retail.csv")
# data taken from tables 1 and 2 of Lewis and Rao (2015)
c <- c(1:3,5:6) # include only advertiser 1 and eliminate exp 4
d1 <- list(nexpt=length(c), nobs=lr$n1[c], ybar=lr$m[c], s=lr$s[c])
m1 <- stan(file="test_roll_model.stan", data=d1, seed=20030601,
iter=10000)
?stan
